{"version":3,"sources":["context/themeContext.jsx","context/gifContext.jsx","assets/images/logo-desktop.svg","assets/images/logo-mobile-modo-noct.svg","components/Header/Header.jsx","assets/images/ilustra_header.svg","assets/images/icon-search.svg","assets/images/icon-search-mod-noc.svg","assets/scripts/constant.js","hooks/useFetch.js","components/Search-section/Search.jsx","assets/images/oval.svg","components/Loader/Loader.jsx","components/NotFoundAlert/NotFoundAlert.jsx","components/Gifs-section/Gifs.jsx","App.jsx","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","darkTheme","setDarkTheme","Provider","value","GifContext","GifProvider","gifs","setGifs","loading","setLoading","Header","useContext","className","src","LogoDark","LogoLight","alt","onClick","API_URL","API_KEY","RESOURCES","GET_SEARCH_API","GET_AUTOCOMPLETE_URL","GET_TRENDING_URL","useFetch","getFetchSearch","tagTerm","limit","fetch","getFetchAutocomplete","getFetchTrending","Search","search","setSearch","suggestionList","setSuggestionList","term","setTerm","handleSearch","e","target","innerText","useEffect","length","getData","a","resp","json","info","data","console","error","imgHeader","onSubmit","preventDefault","type","placeholder","onChange","iconSearchLight","iconSearchDark","map","item","name","Loader","imgLoader","Alert","Gifs","gif","href","bitly_gif_url","rel","images","fixed_height","url","title","id","NotFoundAlert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.562ffc72.chunk.js","sourcesContent":["import { useState, createContext } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({children}) => {\r\n    const [darkTheme, setDarkTheme] = useState(false);\r\n\r\n    return(\r\n        <ThemeContext.Provider value={{darkTheme, setDarkTheme}}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import { useState, createContext } from \"react\";\r\n\r\nexport const GifContext = createContext();\r\n\r\nexport const GifProvider = ({children}) => {\r\n    const [gifs, setGifs] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return(\r\n        <GifContext.Provider value={{gifs, setGifs, loading, setLoading}}>\r\n            {children}\r\n        </GifContext.Provider>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/logo-desktop.2f122678.svg\";","export default __webpack_public_path__ + \"static/media/logo-mobile-modo-noct.47e214b1.svg\";","import './header.scss';\r\nimport React, { useContext } from \"react\";\r\nimport { ThemeContext } from '../../context/themeContext';\r\nimport LogoLight from \"../../assets/images/logo-desktop.svg\"\r\nimport LogoDark from \"../../assets/images/logo-mobile-modo-noct.svg\"\r\n\r\nfunction Header() {\r\n    //Contexto ThemeContext\r\n    const { darkTheme, setDarkTheme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"bar\"></div>\r\n            <div className=\"header-container\">\r\n                <figure>\r\n                    <img src={darkTheme ? LogoDark : LogoLight} alt=\"Logo\" />\r\n                </figure>\r\n                <button\r\n                    className=\"btn\"\r\n                    onClick={() => setDarkTheme(!darkTheme)}>\r\n                    {`MODO ${darkTheme ? \"LIGHT\" : \"DARK\"}`}\r\n                </button>\r\n            </div>  \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/ilustra_header.9d4669b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-search.657bf939.svg\";","export default __webpack_public_path__ + \"static/media/icon-search-mod-noc.ecc2b197.svg\";","const API_URL = \"https://api.giphy.com/v1/gifs\";\r\nconst API_KEY = \"y9ipSTqAhw2gWIahsIfPSdTOTM9WA8eP\";\r\nconst RESOURCES = {\r\n    search: \"/search\",\r\n    autocomplete: \"/search/tags\",\r\n    trending: \"/trending\"\r\n}\r\n\r\nconst GET_SEARCH_API = `${API_URL}${RESOURCES.search}?api_key=${API_KEY}`;\r\nconst GET_AUTOCOMPLETE_URL = `${API_URL}${RESOURCES.autocomplete}?api_key=${API_KEY}`;\r\nconst GET_TRENDING_URL = `${API_URL}${RESOURCES.trending}?api_key=${API_KEY}`;\r\n\r\n\r\nexport {GET_SEARCH_API , GET_AUTOCOMPLETE_URL, GET_TRENDING_URL};\r\n","import {GET_SEARCH_API , GET_AUTOCOMPLETE_URL, GET_TRENDING_URL} from \"../assets/scripts/constant\";\r\n\r\nfunction useFetch(){\r\n    const getFetchSearch = (tagTerm,limit) => {\r\n        return fetch(`${GET_SEARCH_API}&q=${tagTerm}&limit=${limit}`);\r\n    }\r\n\r\n    const getFetchAutocomplete = (tagTerm,limit) => {\r\n        return fetch(`${GET_AUTOCOMPLETE_URL}&q=${tagTerm}&limit=${limit}`);\r\n    }\r\n\r\n    const getFetchTrending = (limit) => {\r\n        return fetch(`${GET_TRENDING_URL}&limit=${limit}`);\r\n    }\r\n\r\n    return {getFetchSearch, getFetchAutocomplete, getFetchTrending}\r\n}\r\n\r\nexport default useFetch;\r\n","import './search.scss';\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { ThemeContext } from '../../context/themeContext';\r\nimport { GifContext } from \"../../context/gifContext\";\r\nimport imgHeader from \"../../assets/images/ilustra_header.svg\";\r\nimport iconSearchLight from \"../../assets/images/icon-search.svg\";\r\nimport iconSearchDark from \"../../assets/images/icon-search-mod-noc.svg\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\n\r\nfunction Search() {\r\n    //Contextos\r\n    const { darkTheme } = useContext(ThemeContext);\r\n    const { setGifs, setLoading } = useContext(GifContext);\r\n\r\n    //Estados Locales\r\n    const [search, setSearch] = useState(\"\");\r\n    const [suggestionList, setSuggestionList] = useState([]);\r\n    const [term, setTerm] = useState(\"\");\r\n\r\n    //Custome Hook - fetch al endpoint de busqueda y autocompletado\r\n    const { getFetchSearch, getFetchAutocomplete } = useFetch();\r\n\r\n    //Funcion para actualizar el valor del input\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    //Funcion para actualizar el termino a buscar cuando se haga click en el boton buscar\r\n    const handleSearchForm = (e) => {\r\n        e.preventDefault();\r\n        setTerm(search);\r\n        //Inicializar estados\r\n        setSearch(\"\");\r\n        setSuggestionList([]);\r\n    }\r\n\r\n    //Funcion para actualizar el termino a buscar cuando se haga click en los terminos de autocompletado\r\n    const handleSearch = (e) => {\r\n        setTerm(e.target.innerText);\r\n        //Inicializar estados\r\n        setSearch(\"\");\r\n        setSuggestionList([]);\r\n    }\r\n\r\n    //Actualizar lista de autocompletado, se ejecuta cada vez que el estado SEARCH se actualiza\r\n    useEffect(() => {\r\n        //Ejecutara la peticion si se ingreso alguna letra en el input\r\n        if (search.length > 0) {\r\n            const getData = async () => {\r\n                try {\r\n                    //Ingresar como parametro tag term (termino a buscar) y limit (cantidad de gifts a obtener)\r\n                    const resp = await getFetchAutocomplete(search, 5);\r\n                    const info = await resp.json();\r\n                    //Acciones luego de obtener la informacion\r\n                    setSuggestionList(info.data);\r\n                } catch (e) {\r\n                    console.error(\"Algo salio mal: \", e);\r\n                }\r\n            }\r\n            getData(); //Ejecutar funcion\r\n        }\r\n    }, [search])\r\n\r\n    //Actualizar lista de gifs, se ejecuta cada vez que el estado TERM se actualiza\r\n    useEffect(() => {\r\n        //Ejecutara la peticion si se ingreso algun termino\r\n        if (term.length > 0) {\r\n            const getData = async () => {\r\n                try {\r\n                    setLoading(true);\r\n                    //Ingresar como parametro tag term (termino a buscar) y limit (cantidad de gifts a obtener)\r\n                    const resp = await getFetchSearch(term, 15);\r\n                    const info = await resp.json();\r\n                    //Acciones luego de obtener la informacion\r\n                    setGifs(info.data);\r\n                    setLoading(false);\r\n                } catch (e) {\r\n                    console.error(\"Algo salio mal: \", e);\r\n                }\r\n            }\r\n            getData(); //Ejecutar funcion\r\n        }\r\n    }, [term])\r\n\r\n    return (\r\n        <div className=\"section-search\">\r\n            <h1>¡Inspirate y busca los mejores <span>GIFS</span>!</h1>\r\n            <figure>\r\n                <img className=\"img-header\" src={imgHeader} alt=\"Imagen de personas saludando\" />\r\n            </figure>\r\n            <div className=\"form\">\r\n                <form onSubmit={handleSearchForm} className=\"input-container\">\r\n                    <input type=\"text\" placeholder=\"Busca gifs\" onChange={handleChange} value={search} />\r\n                    <button className=\"btn-search\">\r\n                        <img src={darkTheme ? iconSearchLight : iconSearchDark} alt=\"searchicon\" />\r\n                    </button>\r\n                </form>\r\n                {suggestionList.length > 0 &&\r\n                    (\r\n                        <div className=\"suggestion-list\">\r\n                            <ul>\r\n                                {suggestionList.map(item => {\r\n                                    return (\r\n                                        <li onClick={handleSearch}>\r\n                                            <img className=\"search-icon\" src={darkTheme ? iconSearchDark : iconSearchLight} alt=\"searchicon\" />\r\n                                            {item.name}\r\n                                        </li>\r\n                                    )\r\n                                })}\r\n                            </ul>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","export default __webpack_public_path__ + \"static/media/oval.3b24a6b9.svg\";","import './loader.scss';\r\nimport imgLoader from \"../../assets/images/oval.svg\"\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <figure>\r\n        <img className=\"loader-img\" src={imgLoader} alt=\"\" />\r\n      </figure>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './notfoundalert.scss';\r\n\r\nfunction Alert(){\r\n    return(\r\n        <div className=\"alert\">\r\n            <span>Oops! No hay gifs de esa categoria</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert;","import \"./gifs.scss\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport { GifContext } from \"../../context/gifContext\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport NotFoundAlert from \"../NotFoundAlert/NotFoundAlert\";\r\n\r\nfunction Gifs() {\r\n    //Contexto GifContext\r\n    const { gifs, setGifs, loading, setLoading } = useContext(GifContext);\r\n    //Custome Hook - fetch al endpoint de gifs en tendencia\r\n    const { getFetchTrending } = useFetch();\r\n\r\n    //Obtiene lista de gifs en tendencia\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                //Ingresar como parametro el numero de gifs a obtener (limit)\r\n                const resp = await getFetchTrending(15);\r\n                const info = await resp.json();\r\n                //Acciones luego de obtener la informacion\r\n                setGifs(info.data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.error(\"Algo salio mal: \",e);\r\n            }\r\n        }\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"gifs-section\" >\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n                //gifs.length si es igual a 0 se considera falso de lo contrario es verdadero\r\n                gifs.length ? (\r\n                    <div>\r\n                        <h2>Resultados de la Busqueda</h2>\r\n                        <div className=\"grid-gifs\">\r\n                            {gifs.map(gif => {\r\n                                return (\r\n                                    <figure key={gif.id}>\r\n                                        <a href={gif.bitly_gif_url} target=\"_blank\" rel=\"noreferrer\">\r\n                                            <img src={gif.images.fixed_height.url} alt={gif.title} />\r\n                                        </a>\r\n                                    </figure>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    \r\n                ) : (\r\n                    <NotFoundAlert />\r\n                )\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gifs;","import './App.scss';\nimport { useContext } from 'react';\nimport { ThemeContext } from './context/themeContext';\nimport { GifProvider } from './context/gifContext';\nimport Header from \"./components/Header/Header\";\nimport Search from \"./components/Search-section/Search\";\nimport Gifs from \"./components/Gifs-section/Gifs\";\n\n\nfunction App() {\n  //Contexto ThemeContext\n  const { darkTheme } = useContext(ThemeContext);\n  \n  return (\n    <div className=\"App\" data-theme={darkTheme ? \"dark\" : \"\"}>\n      <Header />\n      <GifProvider>\n        <Search />\n        <Gifs />\n      </GifProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from './context/themeContext';\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <ThemeProvider>\n    <App />\n  </ThemeProvider> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}